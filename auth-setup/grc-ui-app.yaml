kind: List
apiVersion: v1
items:
# Create a service account
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: grc-ui-app

# Roles for tokenreviews, projects, namespaces
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: grc-ui-app
  rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["get", "list", "create", "update"]

# Bind roles to the serviceaccount
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRoleBinding
  metadata:
    name: grc-ui-app
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: grc-ui-app
  subjects:
    - kind: ServiceAccount
      name: grc-ui-app
      namespace: default


# Route for a secure connection from outside
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: grc-ui-app
  spec:
    to:
      kind: Service
      name: grc-ui-app

# Service
- apiVersion: v1
  kind: Service
  metadata:
    name: grc-ui-app
    labels:
      app: grc-ui-app
  spec:
    ports:
      - port: 3000
        targetPort: 3000
        protocol: TCP
        name: http
    selector:
      app: grc-ui-app

# Deployment to launch the sample app
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    name: grc-ui-app
    labels:
      app: grc-ui-app
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          app: grc-ui-app
      spec:
        serviceAccountName: grc-ui-app
        containers:
          - name: grc-ui-app
            image: willkutler/grc-ui-app:test
            imagePullPolicy: Always
            ports:
            - containerPort: 3000
              protocol: TCP

# Oauth2 Client
- apiVersion: oauth.openshift.io/v1
  kind: OAuthClient
  metadata:
    name: grc-ui-app
  grantMethod: auto
  redirectURIs:
  - http://localhost:3000/multicloud/auth/callback
  secret: grc-ui-app-test-secret