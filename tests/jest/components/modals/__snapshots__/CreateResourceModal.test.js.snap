// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateResourceModal modal handleModalCancel as expected 1`] = `
Object {
  "modalOpen": false,
  "processing": false,
  "requestError": null,
  "yaml": "",
  "yamlParsingError": null,
}
`;

exports[`CreateResourceModal modal handleModalSubmit as expected 1`] = `
Object {
  "modalOpen": false,
  "processing": true,
  "requestError": null,
  "yaml": "",
  "yamlParsingError": null,
}
`;

exports[`CreateResourceModal modal renders as expected 1`] = `
CreateResourceModal {
  "context": Object {
    "locale": undefined,
  },
  "handleEditorChange": [Function],
  "handleModalCancel": [Function],
  "handleModalOpen": [Function],
  "handleModalSubmit": [Function],
  "handleNotificationClosed": [Function],
  "isSubmitDisabled": [Function],
  "props": Object {},
  "refs": Object {},
  "setState": [Function],
  "state": Object {
    "modalOpen": false,
    "processing": false,
    "requestError": null,
    "yaml": "",
    "yamlParsingError": null,
  },
  "updater": Updater {
    "_callbacks": Array [],
    "_renderer": ReactShallowRenderer {
      "_context": Object {
        "locale": undefined,
      },
      "_didScheduleRenderPhaseUpdate": false,
      "_dispatcher": Object {
        "readContext": [Function],
        "useCallback": [Function],
        "useContext": [Function],
        "useDebugValue": [Function],
        "useDeferredValue": [Function],
        "useEffect": [Function],
        "useImperativeHandle": [Function],
        "useLayoutEffect": [Function],
        "useMemo": [Function],
        "useReducer": [Function],
        "useRef": [Function],
        "useResponder": [Function],
        "useState": [Function],
        "useTransition": [Function],
      },
      "_element": <CreateResourceModal />,
      "_firstWorkInProgressHook": null,
      "_forcedUpdate": false,
      "_instance": [Circular],
      "_isReRender": false,
      "_newState": null,
      "_numberOfReRenders": 0,
      "_renderPhaseUpdates": null,
      "_rendered": <div>
        <ForwardRef
          disabled={false}
          icon="add--glyph"
          iconDescription="Provide icon description if icon is used"
          kind="primary"
          onClick={[Function]}
          small={true}
          tabIndex={0}
          type="button"
        />
      </div>,
      "_rendering": false,
      "_updater": [Circular],
      "_workInProgressHook": null,
    },
  },
}
`;
