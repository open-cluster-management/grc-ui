// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateResourceModal modal handleModalCancel as expected 1`] = `
Object {
  "modalOpen": false,
  "processing": false,
  "requestError": null,
  "yaml": "",
  "yamlParsingError": null,
}
`;

exports[`CreateResourceModal modal handleModalSubmit as expected 1`] = `
Object {
  "modalOpen": false,
  "processing": true,
  "requestError": null,
  "yaml": "",
  "yamlParsingError": null,
}
`;

exports[`CreateResourceModal modal renders as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CreateResourceModal />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <UNDEFINED
          disabled={false}
          icon="add--glyph"
          iconDescription="Provide icon description if icon is used"
          id={undefined}
          kind="primary"
          onClick={[Function]}
          small={true}
          tabIndex={0}
          type="button"
        />,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "create-resource",
        "nodeType": "function",
        "props": Object {
          "children": undefined,
          "disabled": false,
          "icon": "add--glyph",
          "iconDescription": "Provide icon description if icon is used",
          "id": undefined,
          "kind": "primary",
          "onClick": [Function],
          "small": true,
          "tabIndex": 0,
          "type": "button",
        },
        "ref": null,
        "rendered": null,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": Object {
            "disabled": false,
            "iconDescription": "Provide icon description if icon is used",
            "kind": "primary",
            "small": false,
            "tabIndex": 0,
            "type": "button",
          },
          "propTypes": Object {
            "as": [Function],
            "children": [Function],
            "className": [Function],
            "disabled": [Function],
            "href": [Function],
            "icon": [Function],
            "iconDescription": [Function],
            "kind": [Function],
            "renderIcon": [Function],
            "role": [Function],
            "small": [Function],
            "tabIndex": [Function],
            "type": [Function],
          },
          "render": [Function],
        },
      },
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <UNDEFINED
            disabled={false}
            icon="add--glyph"
            iconDescription="Provide icon description if icon is used"
            id={undefined}
            kind="primary"
            onClick={[Function]}
            small={true}
            tabIndex={0}
            type="button"
          />,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "create-resource",
          "nodeType": "function",
          "props": Object {
            "children": undefined,
            "disabled": false,
            "icon": "add--glyph",
            "iconDescription": "Provide icon description if icon is used",
            "id": undefined,
            "kind": "primary",
            "onClick": [Function],
            "small": true,
            "tabIndex": 0,
            "type": "button",
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "disabled": false,
              "iconDescription": "Provide icon description if icon is used",
              "kind": "primary",
              "small": false,
              "tabIndex": 0,
              "type": "button",
            },
            "propTypes": Object {
              "as": [Function],
              "children": [Function],
              "className": [Function],
              "disabled": [Function],
              "href": [Function],
              "icon": [Function],
              "iconDescription": [Function],
              "kind": [Function],
              "renderIcon": [Function],
              "role": [Function],
              "small": [Function],
              "tabIndex": [Function],
              "type": [Function],
            },
            "render": [Function],
          },
        },
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
