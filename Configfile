DOCKER_EDGE_REGISTRY ?=hyc-cloud-private-edge-docker-local.artifactory.swg-devops.com
DOCKER_SCRATCH_REGISTRY ?=hyc-cloud-private-scratch-docker-local.artifactory.swg-devops.com
DOCKER_INTEGRATION_REGISTRY ?=hyc-cloud-private-integration-docker-local.artifactory.swg-devops.com
DOCKER_REGISTRY ?=$(DOCKER_INTEGRATION_REGISTRY)
DOCKER_SERVER ?=$(DOCKER_INTEGRATION_REGISTRY)
DOCKER_NAMESPACE ?=ibmcom

A11Y_TESTS ?=TRUE
ARTIFACTORY_PWD ?=
ARTIFACTORY_USER ?=ycao@us.ibm.com
cfcRouterUrl ?=https://9.42.82.240:8443
NAMESPACE ?=kube-system
NODE_ENV ?=development
GIT_REMOTE_URL ?=$(shell git config --get remote.origin.url)
GITHUB_USER :=$(shell echo $(GITHUB_USER) | sed 's/@/%40/g')
GITHUB_TOKEN ?=
IMAGE_DESCRIPTION =ICP GRC UI Container
IMAGE_NAME =grc-ui
IMAGE_REPO ?=$(DOCKER_INTEGRATION_REGISTRY)/$(DOCKER_NAMESPACE)
IMAGE_VERSION :=$(shell git rev-parse --short HEAD)
UNIT_TESTS ?=TRUE
SELENIUM_TESTS ?=TRUE
RELEASE_TAG ?=latest
RELEASE_TAG_RED_HAT ?=$(RELEASE_TAG)-rhel
SEMVERSION_RED_HAT ?=$(SEMVERSION)-rhel
OAUTH2_CLIENT_ID ?=
OAUTH2_CLIENT_SECRET ?=
OAUTH2_REDIRECT_URL ?=https://localhost:3000/auth/liberty/callback

#new additions for the UBI image
#Variables for redhat required labels
IMAGE_DISPLAY_NAME =GRC Console
IMAGE_MAINTAINER =ycao@us.ibm.com
IMAGE_VENDOR =IBM
IMAGE_SUMMARY =$(IMAGE_DESCRIPTION)
IMAGE_OPENSHIFT_TAGS =GRC Console

ARCH = $(shell uname -m)
ifeq ($(ARCH), x86_64)
	IMAGE_NAME_ARCH =$(IMAGE_NAME)-amd64
	NETWORK_NAME ?=mcm-network-$(IMAGE_VERSION)
else
	IMAGE_NAME_ARCH =$(IMAGE_NAME)-$(ARCH)
	NETWORK_NAME ?=mcm-network-$(IMAGE_VERSION)-$(shell date +%s)
endif

ifneq ($(BUILD_HARNESS_ARCH),amd64)
DOCKER_FILE =Dockerfile.$(ARCH)
endif

DOCKER_USERNAME ?=$(GITHUB_USER)
DOCKER_USER ?=$(DOCKER_USERNAME)
DOCKER_PASSWORD ?=
DOCKER_PASS ?=$(DOCKER_PASSWORD)
DOCKER_BUILD_TAG ?=$(IMAGE_VERSION)
SCRATCH_TAG ?=$(DOCKER_BUILD_TAG)
DOCKER_TAG ?=$(RELEASE_TAG)
DOCKER_CONTAINER_NAME ?=grc-ui
DOCKER_IMAGE ?=$(IMAGE_NAME)
VCS_REF =$(DOCKER_TAG)
NETWORK_OP ?=--network
IP_OP ?=--ip
HOST ?=127.0.0.1
APP_PORT ?=3000
CONTAINER_PORT ?=3000
DOCKER_BIND_PORT ?=$(HOST):$(APP_PORT):$(CONTAINER_PORT)

GRC_UI_API_URL ?=https://10.10.0.5:4000/grcuiapi
GRC_UI_API_IMAGE_NAME_ARCH ?=grc-ui-api-amd64
GRC_UI_API_DOCKER_URI ?=$(IMAGE_REPO)/$(GRC_UI_API_IMAGE_NAME_ARCH)
GRC_UI_API_DOCKER_CONTAINER_NAME ?=grc-ui-api
GRC_UI_API_DOCKER_APP_PORT ?=4000
GRC_UI_API_DOCKER_CONTAINER_PORT ?=4000
GRC_UI_API_DOCKER_BIND_PORT ?=$(HOST):$(GRC_UI_API_DOCKER_APP_PORT):$(GRC_UI_API_DOCKER_CONTAINER_PORT)
GRC_UI_API_DOCKER_IP ?=10.10.0.5

DOCKER_BUILD_OPTS=--build-arg "VCS_REF=$(SEMVERSION)" \
	--build-arg "VCS_URL=$(GIT_REMOTE_URL)" \
	--build-arg "IMAGE_NAME=$(IMAGE_NAME)" \
	--build-arg "IMAGE_DESCRIPTION=$(IMAGE_DESCRIPTION)" \
	--build-arg "IMAGE_DISPLAY_NAME=$(IMAGE_DISPLAY_NAME)" \
	--build-arg "IMAGE_NAME_ARCH=$(IMAGE_NAME_ARCH)" \
	--build-arg "IMAGE_MAINTAINER=$(IMAGE_MAINTAINER)" \
	--build-arg "IMAGE_VENDOR=$(IMAGE_VENDOR)" \
	--build-arg "IMAGE_VERSION=$(IMAGE_VERSION)" \
	--build-arg "IMAGE_DESCRIPTION=$(IMAGE_DESCRIPTION)" \
	--build-arg "IMAGE_SUMMARY=$(IMAGE_SUMMARY)" \
	--build-arg "IMAGE_OPENSHIFT_TAGS=$(IMAGE_OPENSHIFT_TAGS)"

DOCKER_RUN_OPTS=\
	-d \
	-e NODE_ENV=$(NODE_ENV) \
	-e cfcRouterUrl=$(cfcRouterUrl) \
	-e PLATFORM_IDENTITY_PROVIDER_URL=$(PLATFORM_IDENTITY_PROVIDER_URL) \
	-e OAUTH2_CLIENT_ID=$(OAUTH2_CLIENT_ID) \
	-e OAUTH2_CLIENT_SECRET=$(OAUTH2_CLIENT_SECRET) \
	-e OAUTH2_REDIRECT_URL=$(OAUTH2_REDIRECT_URL) \
	-e grcUiApiUrl=$(GRC_UI_API_URL)
